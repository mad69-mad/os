#include <stdio.h>
void main()
{
    int max[10][10],alloc[10][10],need[10][10],avail[10],completed[10],safe[10];
    int process,np,nr,count=0;
    printf("Enter number of processes: ");
    scanf("%d",&np);
    printf("Enter the number of resources: ");
    scanf("%d",&nr);
    printf("Enter the Max Matrix for each process: ");
    for(int i=0;i<np;i++)
    {
        printf("\nProcess %d: ",i+1);
        for(int j=0;j<nr;j++)
            scanf("%d",&max[i][j]);
    }
    printf("\nEnter the Allocated Matrix for each process: ");
    for(int i=0;i<np;i++)
    {
        printf("\nProcess %d: ",i+1);
        for(int j=0;j<nr;j++)
            scanf("%d",&alloc[i][j]);
    }
    printf("\nEnter the Available Resources: ");
    for(int i=0;i<nr;i++)
        scanf("%d",&avail[i]);
    for(int i=0;i<np;i++)
    {
        for(int j=0;j<nr;j++)
            need[i][j]=max[i][j]-alloc[i][j];
    }
    for(int i=0;i<np;i++)
        completed[i]=0;
    do
    {
        printf("\nMax Matrix:\tAllocation Matrix:\n");
        for(int i=0;i<np;i++)
        {
            for(int j=0;j<nr;j++)
                printf("%d ",max[i][j]);
            printf("\t\t");
            for(int j=0;j<nr;j++)
                printf("%d ",alloc[i][j]);
            printf("\n");
        }
        process=-1;
        for(int i=0;i<np;i++)
        {
            if(completed[i]==0)
            {
                process=i;
                for(int j=0;j<nr;j++)
                {
                    if(avail[j]<need[i][j])
                    {
                        process=-1;
                        break;
                    }
                }
            }
            if(process!=-1)
                break;
        }
        if(process!=-1)
        {
            printf("Process %d runs to completion\n",process+1);
            completed[process]=1;
            safe[count]=process+1;
            count++;
            for(int j=0;j<nr;j++)
            {
                avail[j]+=alloc[process][j];
                alloc[process][j]=0;
                max[process][j]=0;
            }
        }
    }while(count!=np && process!=-1);
    if(count==np)
    {
        printf("\nThe system is in a safe state!!");
        printf("\nSafe Sequence: < ");
        for(int i=0;i<np;i++)
            printf("%d ",safe[i]);
        printf(">");
    }
    else
        printf("\nThe system is not in a safe state");
}
